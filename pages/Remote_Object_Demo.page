<apex:page >
  <apex:remoteObjects jsNamespace="Sfdc">
    <apex:remoteObjectModel name="Account" fields="Id,Name">
      
    </apex:remoteObjectModel>
  </apex:remoteObjects>
  <div id="accounts">
    Loading ...
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/q.js/1.4.1/q.min.js" type="text/javascript"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/4.0.5/handlebars.min.js" type="text/javascript"></script>
  <script id="accounts-table-template" type="text/x-handlebars-template">
    <table>
      <thead>
        <tr>
          <th>Account</th>
        </tr>
      </thead>
      <tbody>
        {{#each accounts}}
        <tr>
          <td>{{this.name}}</td>
        </tr>
        {{/each}}
      </tbody>
    </table>
    <div class="entry">
      <h1>{{title}}</h1>
      <div class="body">
        {{body}}
      </div>
    </div>
  </script>
  <script type="text/javascript">
    Q.Promise(function(resolve, reject, notify) {
      var x = new Sfdc.Account();
      
      //https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_remote_objects_using_retrieve_query_object.htm
      var criteria = {};
      
      //https://developer.salesforce.com/docs/atlas.en-us.pages.meta/pages/pages_remote_objects_callback_functions.htm
      var callback = function(error, results, event) {
        if (error) {
          reject(error.message);
          
        } else {
          resolve(results);
          
        }
        
      }
      
      x.retrieve(criteria, callback);
      
    }).then(function(records) {
      var accounts = [];
      
      records.forEach(function(record) {
        accounts.push({
          'id':record.get('Id'),
          'name':record.get('Name')
        })
      })
      
      return accounts;
      
    }).then(function(accounts) {
        var source = document.getElementById('accounts-table-template').innerHTML;
        var template = Handlebars.compile(source);
        var context = {'accounts': accounts};
        var html = template(context);
        document.getElementById('accounts').innerHTML = html;
    });
    
  </script>
</apex:page>